// Code generated by protoc-gen-gogo.
// source: p.proto
// DO NOT EDIT!

/*
Package p is a generated protocol buffer package.

It is generated from these files:
	p.proto

It has these top-level messages:
	M
*/
package p

import proto "code.google.com/p/gogoprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type M struct {
	Field1           *int32                    `protobuf:"varint,1,req,name=field1" json:"field1,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *M) Reset()         { *m = M{} }
func (m *M) String() string { return proto.CompactTextString(m) }
func (*M) ProtoMessage()    {}

var extRange_M = []proto.ExtensionRange{
	{2, 2},
	{5, 5},
}

func (*M) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_M
}
func (m *M) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *M) GetField1() int32 {
	if m != nil && m.Field1 != nil {
		return *m.Field1
	}
	return 0
}

var E_M_Field2 = &proto.ExtensionDesc{
	ExtendedType:  (*MN)(nil),
	ExtensionType: (*int64)(nil),
	Field:         100,
	Name:          "m.field2",
	Tag:           "varint,100,req,name=field2",
}

var E_M_Field4 = &proto.ExtensionDesc{
	ExtendedType:  (*MN)(nil),
	ExtensionType: (*string)(nil),
	Field:         101,
	Name:          "m.field4",
	Tag:           "bytes,101,req,name=field4",
}

type MN struct {
	Field129         *int32                    `protobuf:"varint,1,req,name=field129" json:"field129,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *MN) Reset()         { *m = MN{} }
func (m *MN) String() string { return proto.CompactTextString(m) }
func (*MN) ProtoMessage()    {}

var extRange_MN = []proto.ExtensionRange{
	{100, 200},
}

func (*MN) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_MN
}
func (m *MN) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *MN) GetField129() int32 {
	if m != nil && m.Field129 != nil {
		return *m.Field129
	}
	return 0
}

var E_Field3 = &proto.ExtensionDesc{
	ExtendedType:  (*M)(nil),
	ExtensionType: (*int64)(nil),
	Field:         2,
	Name:          "field3",
	Tag:           "varint,2,req,name=field3",
}

func init() {
	proto.RegisterExtension(E_M_Field2)
	proto.RegisterExtension(E_M_Field4)
	proto.RegisterExtension(E_Field3)
}
